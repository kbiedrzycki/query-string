{"version":3,"sources":["node_modules/strict-uri-encode/index.js","node_modules/decode-uri-component/index.js","index.js"],"names":["module","exports","str","encodeURIComponent","replace","x","charCodeAt","toString","toUpperCase","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","err","length","left","slice","right","Array","prototype","concat","call","decode","input","tokens","match","i","customDecodeURIComponent","replaceMap","exec","result","entries","Object","keys","key","encodedURI","TypeError","strictUriEncode","require","decodeComponent","encoderForArrayFormat","options","arrayFormat","value","index","encode","parserForArrayFormat","accumulator","undefined","strict","keysSorter","isArray","sort","a","b","Number","map","extract","queryStart","indexOf","parse","formatter","assign","ret","create","trim","param","reduce","Boolean","stringify","obj","value2","push","filter","parseUrl"],"mappings":";AAAA,aACAA,OAAOC,QAAUC,CAAAA,GAAOC,mBAAmBD,GAAKE,QAAQ,WAAYC,GAASA,IAAAA,EAAEC,WAAW,GAAGC,SAAS,IAAIC;;ACD1G,aACA,IAAIC,EAAQ,eACRC,EAAgB,IAAIC,OAAOF,EAAO,MAClCG,EAAe,IAAID,OAAO,IAAMF,EAAQ,KAAM,MAElD,SAASI,EAAiBC,EAAYC,GACjC,IAEIC,OAAAA,mBAAmBF,EAAWG,KAAK,KACzC,MAAOC,IAILJ,GAAsB,IAAtBA,EAAWK,OACPL,OAAAA,EAGAC,EAAAA,GAAS,EAGbK,IAAAA,EAAON,EAAWO,MAAM,EAAGN,GAC3BO,EAAQR,EAAWO,MAAMN,GAEtBQ,OAAAA,MAAMC,UAAUC,OAAOC,KAAK,GAAIb,EAAiBO,GAAOP,EAAiBS,IAGjF,SAASK,EAAOC,GACX,IACIZ,OAAAA,mBAAmBY,GACzB,MAAOV,GAGH,IAFDW,IAAAA,EAASD,EAAME,MAAMpB,GAEhBqB,EAAI,EAAGA,EAAIF,EAAOV,OAAQY,IAGzBH,GAFDf,EAAAA,EAAiBgB,EAAQE,GAAGd,KAAK,KAE1Ba,MAAMpB,GAGfkB,OAAAA,GAIT,SAASI,EAAyBJ,GAQ1BE,IANHG,IAAAA,EAAa,CACN,SAAA,KACA,SAAA,MAGPH,EAAQlB,EAAasB,KAAKN,GACvBE,GAAO,CACT,IAEQA,EAAAA,EAAM,IAAMd,mBAAmBc,EAAM,IAC/C,MAAOZ,GACJiB,IAAAA,EAASR,EAAOG,EAAM,IAEtBK,IAAWL,EAAM,KACTA,EAAAA,EAAM,IAAMK,GAIjBvB,EAAAA,EAAasB,KAAKN,GAIhB,EAAA,OAAS,IAIf,IAFDQ,IAAAA,EAAUC,OAAOC,KAAKL,GAEjBF,EAAI,EAAGA,EAAIK,EAAQjB,OAAQY,IAAK,CAEpCQ,IAAAA,EAAMH,EAAQL,GACVH,EAAAA,EAAMxB,QAAQ,IAAIO,OAAO4B,EAAK,KAAMN,EAAWM,IAGjDX,OAAAA,EAGR5B,OAAOC,QAAU,SAAUuC,GACtB,GAAsB,iBAAfA,EACJ,MAAA,IAAIC,UAAU,6DAA+DD,EAAa,KAG7F,IAIIxB,OAHMwB,EAAAA,EAAWpC,QAAQ,MAAO,KAGhCY,mBAAmBwB,GACzB,MAAOtB,GAEDc,OAAAA,EAAyBQ;;AC4HlC,IAAA,EAAA,WAAA,OAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,OAAA,YAAA,OAAA,GAAA,OAAA,SAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,KAAA,GAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yDAAA,GAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,GAvNME,EAAkBC,QAAQ,qBAC1BC,EAAkBD,QAAQ,wBAEhC,SAASE,EAAsBC,GACtBA,OAAAA,EAAQC,aACV,IAAA,QACG,OAAA,SAACR,EAAKS,EAAOC,GACZD,OAAU,OAAVA,EAAiB,CACvBE,EAAOX,EAAKO,GACZ,IACAG,EACA,KACChC,KAAK,IAAM,CACZiC,EAAOX,EAAKO,GACZ,IACAI,EAAOD,EAAOH,GACd,KACAI,EAAOF,EAAOF,IACb7B,KAAK,KAEJ,IAAA,UACG,OAAA,SAACsB,EAAKS,GACLA,OAAU,OAAVA,EAAiB,CAACE,EAAOX,EAAKO,GAAU,MAAM7B,KAAK,IAAM,CAC/DiC,EAAOX,EAAKO,GACZ,MACAI,EAAOF,EAAOF,IACb7B,KAAK,KAET,QACQ,OAAA,SAACsB,EAAKS,GACLA,OAAU,OAAVA,EAAiBE,EAAOX,EAAKO,GAAW,CAC9CI,EAAOX,EAAKO,GACZ,IACAI,EAAOF,EAAOF,IACb7B,KAAK,MAKX,SAASkC,EAAqBL,GACzBX,IAAAA,OAAJ,EAEQW,OAAAA,EAAQC,aACV,IAAA,QACG,OAAA,SAACR,EAAKS,EAAOI,GACV,EAAA,aAAalB,KAAKK,GAErBA,EAAAA,EAAInC,QAAQ,WAAY,IAEzB+B,QAKoBkB,IAArBD,EAAYb,KACHA,EAAAA,GAAO,IAGRA,EAAAA,GAAKJ,EAAO,IAAMa,GARjBT,EAAAA,GAAOS,GAUjB,IAAA,UACG,OAAA,SAACT,EAAKS,EAAOI,GACV,EAAA,UAAUlB,KAAKK,GAClBA,EAAAA,EAAInC,QAAQ,QAAS,IAEtB+B,OAKoBkB,IAArBD,EAAYb,GAKJA,EAAAA,GAAO,GAAGd,OAAO2B,EAAYb,GAAMS,GAJlCT,EAAAA,GAAO,CAACS,GALRT,EAAAA,GAAOS,GAWtB,QACQ,OAAA,SAACT,EAAKS,EAAOI,QACMC,IAArBD,EAAYb,GAKJA,EAAAA,GAAO,GAAGd,OAAO2B,EAAYb,GAAMS,GAJlCT,EAAAA,GAAOS,IASxB,SAASE,EAAOF,EAAOF,GAClBA,OAAAA,EAAQI,OACJJ,EAAQQ,OAASZ,EAAgBM,GAAS7C,mBAAmB6C,GAG9DA,EAGR,SAASrB,EAAOqB,EAAOF,GAClBA,OAAAA,EAAQnB,OACJiB,EAAgBI,GAGjBA,EAGR,SAASO,EAAW3B,GACfL,OAAAA,MAAMiC,QAAQ5B,GACVA,EAAM6B,OAGO,iBAAV7B,IAAAA,EAAAA,YAAAA,EAAAA,IACH2B,EAAWlB,OAAOC,KAAKV,IAC5B6B,KAAK,SAACC,EAAGC,GAAMC,OAAAA,OAAOF,GAAKE,OAAOD,KAClCE,IAAI,SAAA,GAAOjC,OAAAA,EAAMW,KAGbX,EAGR,SAASkC,EAAQlC,GACVmC,IAAAA,EAAanC,EAAMoC,QAAQ,KAC7BD,OAAgB,IAAhBA,EACI,GAEDnC,EAAMP,MAAM0C,EAAa,GAGjC,SAASE,EAAMrC,EAAOkB,GAGfoB,IAAAA,EAAYf,EAFRd,EAAAA,OAAO8B,OAAO,CAACxC,QAAQ,EAAMoB,YAAa,QAASD,IAKvDsB,EAAM/B,OAAOgC,OAAO,MAEtB,GAAiB,iBAAVzC,EACHwC,OAAAA,EAKJ,KAFIxC,EAAAA,EAAM0C,OAAOlE,QAAQ,SAAU,KAG/BgE,OAAAA,EAfsB,IAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAkBVxC,IAAAA,IAAkB,EAAlBA,EAAAA,EAAMb,MAAM,KAAM,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,MAAA,GAAA,EAAA,CAA3BwD,IACSA,EADkB,EAAA,MACZnE,QAAQ,MAAO,KAAKW,MAAM,KADd,EAAA,EAAA,EAAA,GAChCwB,EADgC,EAAA,GAC3BS,EAD2B,EAAA,GAK7BA,OAAUK,IAAVL,EAAsB,KAAOrB,EAAOqB,EAAOF,GAEzCnB,EAAAA,EAAOY,EAAKO,GAAUE,EAAOoB,IAzBV,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,KAAA,GAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GA4BvB/B,OAAAA,OAAOC,KAAK8B,GAAKX,OAAOe,OAAO,SAACrC,EAAQI,GACxCS,IAAAA,EAAQoB,EAAI7B,GAQXJ,OAPHsC,QAAQzB,IAA2B,iBAAVA,IAAAA,EAAAA,YAAAA,EAAAA,MAAuBzB,MAAMiC,QAAQR,GAE1DT,EAAAA,GAAOgB,EAAWP,GAElBT,EAAAA,GAAOS,EAGRb,GACLE,OAAOgC,OAAO,OAGlBpE,QAAQ6D,QAAUA,EAClB7D,QAAQgE,MAAQA,EAEhBhE,QAAQyE,UAAY,SAACC,EAAK7B,IASJ,KAFXT,EAAAA,OAAO8B,OANA,CACR,QAAA,EACA,QAAA,EACK,YAAA,QAGoBrB,IAEtBW,OACHA,EAAAA,KAAO,cAGVS,IAAAA,EAAYrB,EAAsBC,GAEjC6B,OAAAA,EAAMtC,OAAOC,KAAKqC,GAAKlB,KAAKX,EAAQW,MAAMI,IAAI,SAAO,GACrDb,IAAAA,EAAQ2B,EAAIpC,GAEdS,QAAUK,IAAVL,EACI,MAAA,GAGJA,GAAU,OAAVA,EACIE,OAAAA,EAAOX,EAAKO,GAGhBvB,GAAAA,MAAMiC,QAAQR,GAAQ,CACnBb,IAAAA,EAAS,GADU,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAGJa,IAAAA,IAAe,EAAfA,EAAAA,EAAM3B,QAAS,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,MAAA,GAAA,EAAA,CAAzBuD,IAAAA,EAAyB,EAAA,WACpBvB,IAAXuB,GAIGC,EAAAA,KAAKX,EAAU3B,EAAKqC,EAAQzC,EAAOhB,UARlB,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,KAAA,GAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAWlBgB,OAAAA,EAAOlB,KAAK,KAGbiC,OAAAA,EAAOX,EAAKO,GAAW,IAAMI,EAAOF,EAAOF,KAChDgC,OAAO,SAAA,GAAKzE,OAAAA,EAAEc,OAAS,IAAGF,KAAK,KAAO,IAG1ChB,QAAQ8E,SAAW,SAACnD,EAAOkB,GACnB,MAAA,CACDlB,IAAAA,EAAMb,MAAM,KAAK,IAAM,GACrBkD,MAAAA,EAAMH,EAAQlC,GAAQkB","file":"index.map","sourceRoot":"..","sourcesContent":["'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","const strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, index) => {\n\t\t\t\treturn value === null ? [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'[',\n\t\t\t\t\tindex,\n\t\t\t\t\t']'\n\t\t\t\t].join('') : [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'[',\n\t\t\t\t\tencode(index, options),\n\t\t\t\t\t']=',\n\t\t\t\t\tencode(value, options)\n\t\t\t\t].join('');\n\t\t\t};\n\t\tcase 'bracket':\n\t\t\treturn (key, value) => {\n\t\t\t\treturn value === null ? [encode(key, options), '[]'].join('') : [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'[]=',\n\t\t\t\t\tencode(value, options)\n\t\t\t\t].join('');\n\t\t\t};\n\t\tdefault:\n\t\t\treturn (key, value) => {\n\t\t\t\treturn value === null ? encode(key, options) : [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'=',\n\t\t\t\t\tencode(value, options)\n\t\t\t\t].join('');\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction extract(input) {\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parse(input, options) {\n\toptions = Object.assign({decode: true, arrayFormat: 'none'}, options);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof input !== 'string') {\n\t\treturn ret;\n\t}\n\n\tinput = input.trim().replace(/^[?#&]/, '');\n\n\tif (!input) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of input.split('&')) {\n\t\tlet [key, value] = param.replace(/\\+/g, ' ').split('=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : decode(value, options);\n\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\treturn Object.keys(ret).sort().reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (obj, options) => {\n\tconst defaults = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t};\n\n\toptions = Object.assign(defaults, options);\n\n\tif (options.sort === false) {\n\t\toptions.sort = () => {};\n\t}\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\treturn obj ? Object.keys(obj).sort(options.sort).map(key => {\n\t\tconst value = obj[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tconst result = [];\n\n\t\t\tfor (const value2 of value.slice()) {\n\t\t\t\tif (value2 === undefined) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tresult.push(formatter(key, value2, result.length));\n\t\t\t}\n\n\t\t\treturn result.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&') : '';\n};\n\nexports.parseUrl = (input, options) => {\n\treturn {\n\t\turl: input.split('?')[0] || '',\n\t\tquery: parse(extract(input), options)\n\t};\n};\n"]}